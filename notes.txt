General design:
    workouts are added as you go, or modified if they exist
    upon startup, app will ask you for action: view or enter, if enter then:
        if not in the database, ask to create new entry
            if yes, name is added, user must add recommended, date, completion time, actual, and note
            if no, back to view or enter
        if in database add another date under existing name
    Workouts will contain nested JSON entry for each repeat attempt, viewing these will be done by using the crossfit date structure
Example JSON:
    {
        "Jackie": {
            "recommended": [
                "1000 meter row",
                "50 thrusters",
                "30 pull-ups",
                "45lb"
            ],
            "dates": {
                "220812": {
                    "time": "11:03",
                    "actual": [
                        "1000 meter row",
                        "50 thrusters",
                        "30 pull-ups",
                        "45lb"
                    ],
                    "note": "Did set of 10 thrusters and 6 pullups 5 times, then rowed"
                }
            }
        }
    }

{"nancy": {"recommended": [["400m run", "15 overhead squats"]], "dates": {"220815": {"time": "13:35", "actual": [["400m run", "15 front squats"]], "note": "35lb dumbbell was used for squats"}}}}

{"Jackie": {"recommended": ["1000 meter row", "50 thrusters", "30 pull-ups", "45lb"], "dates": {"220812": {"time": "11:03", "actual": ["1000 meter row", "50 thrusters", "30 pull-ups", "45lb"], "note": "Did set of 10 thrusters and 6 pullups 5 times, then rowed"}}}, "nancy": {"recommended": [["400m run", "15 overhead squats"]], "dates": {"220815": {"time": "13:35", "actual": [["400m run", "15 front squats"]], "note": "35lb dumbbell was used for squats"}}}}